// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: comprehensive_test.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message containing all scalar types
type AllScalarTypes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Variable-length integer types
	Int32Field  int32  `protobuf:"varint,1,opt,name=int32_field,json=int32Field,proto3" json:"int32_field,omitempty"`
	Int64Field  int64  `protobuf:"varint,2,opt,name=int64_field,json=int64Field,proto3" json:"int64_field,omitempty"`
	Uint32Field uint32 `protobuf:"varint,3,opt,name=uint32_field,json=uint32Field,proto3" json:"uint32_field,omitempty"`
	Uint64Field uint64 `protobuf:"varint,4,opt,name=uint64_field,json=uint64Field,proto3" json:"uint64_field,omitempty"`
	// Signed integers with ZigZag encoding
	Sint32Field int32 `protobuf:"zigzag32,5,opt,name=sint32_field,json=sint32Field,proto3" json:"sint32_field,omitempty"`
	Sint64Field int64 `protobuf:"zigzag64,6,opt,name=sint64_field,json=sint64Field,proto3" json:"sint64_field,omitempty"`
	// Fixed-width integer types (more efficient for large values)
	Fixed32Field  uint32 `protobuf:"fixed32,7,opt,name=fixed32_field,json=fixed32Field,proto3" json:"fixed32_field,omitempty"`
	Fixed64Field  uint64 `protobuf:"fixed64,8,opt,name=fixed64_field,json=fixed64Field,proto3" json:"fixed64_field,omitempty"`
	Sfixed32Field int32  `protobuf:"fixed32,9,opt,name=sfixed32_field,json=sfixed32Field,proto3" json:"sfixed32_field,omitempty"`
	Sfixed64Field int64  `protobuf:"fixed64,10,opt,name=sfixed64_field,json=sfixed64Field,proto3" json:"sfixed64_field,omitempty"`
	// Floating point types
	FloatField  float32 `protobuf:"fixed32,11,opt,name=float_field,json=floatField,proto3" json:"float_field,omitempty"`
	DoubleField float64 `protobuf:"fixed64,12,opt,name=double_field,json=doubleField,proto3" json:"double_field,omitempty"`
	// Boolean type
	BoolField bool `protobuf:"varint,13,opt,name=bool_field,json=boolField,proto3" json:"bool_field,omitempty"`
	// String and bytes
	StringField   string `protobuf:"bytes,14,opt,name=string_field,json=stringField,proto3" json:"string_field,omitempty"`
	BytesField    []byte `protobuf:"bytes,15,opt,name=bytes_field,json=bytesField,proto3" json:"bytes_field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllScalarTypes) Reset() {
	*x = AllScalarTypes{}
	mi := &file_comprehensive_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllScalarTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllScalarTypes) ProtoMessage() {}

func (x *AllScalarTypes) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllScalarTypes.ProtoReflect.Descriptor instead.
func (*AllScalarTypes) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{0}
}

func (x *AllScalarTypes) GetInt32Field() int32 {
	if x != nil {
		return x.Int32Field
	}
	return 0
}

func (x *AllScalarTypes) GetInt64Field() int64 {
	if x != nil {
		return x.Int64Field
	}
	return 0
}

func (x *AllScalarTypes) GetUint32Field() uint32 {
	if x != nil {
		return x.Uint32Field
	}
	return 0
}

func (x *AllScalarTypes) GetUint64Field() uint64 {
	if x != nil {
		return x.Uint64Field
	}
	return 0
}

func (x *AllScalarTypes) GetSint32Field() int32 {
	if x != nil {
		return x.Sint32Field
	}
	return 0
}

func (x *AllScalarTypes) GetSint64Field() int64 {
	if x != nil {
		return x.Sint64Field
	}
	return 0
}

func (x *AllScalarTypes) GetFixed32Field() uint32 {
	if x != nil {
		return x.Fixed32Field
	}
	return 0
}

func (x *AllScalarTypes) GetFixed64Field() uint64 {
	if x != nil {
		return x.Fixed64Field
	}
	return 0
}

func (x *AllScalarTypes) GetSfixed32Field() int32 {
	if x != nil {
		return x.Sfixed32Field
	}
	return 0
}

func (x *AllScalarTypes) GetSfixed64Field() int64 {
	if x != nil {
		return x.Sfixed64Field
	}
	return 0
}

func (x *AllScalarTypes) GetFloatField() float32 {
	if x != nil {
		return x.FloatField
	}
	return 0
}

func (x *AllScalarTypes) GetDoubleField() float64 {
	if x != nil {
		return x.DoubleField
	}
	return 0
}

func (x *AllScalarTypes) GetBoolField() bool {
	if x != nil {
		return x.BoolField
	}
	return false
}

func (x *AllScalarTypes) GetStringField() string {
	if x != nil {
		return x.StringField
	}
	return ""
}

func (x *AllScalarTypes) GetBytesField() []byte {
	if x != nil {
		return x.BytesField
	}
	return nil
}

// Message with repeated fields of various types
type AllRepeatedTypes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Repeated integers (packed encoding)
	Int32List    []int32  `protobuf:"varint,1,rep,packed,name=int32_list,json=int32List,proto3" json:"int32_list,omitempty"`
	Int64List    []int64  `protobuf:"varint,2,rep,packed,name=int64_list,json=int64List,proto3" json:"int64_list,omitempty"`
	Uint32List   []uint32 `protobuf:"varint,3,rep,packed,name=uint32_list,json=uint32List,proto3" json:"uint32_list,omitempty"`
	Uint64List   []uint64 `protobuf:"varint,4,rep,packed,name=uint64_list,json=uint64List,proto3" json:"uint64_list,omitempty"`
	Sint32List   []int32  `protobuf:"zigzag32,5,rep,packed,name=sint32_list,json=sint32List,proto3" json:"sint32_list,omitempty"`
	Sint64List   []int64  `protobuf:"zigzag64,6,rep,packed,name=sint64_list,json=sint64List,proto3" json:"sint64_list,omitempty"`
	Fixed32List  []uint32 `protobuf:"fixed32,7,rep,packed,name=fixed32_list,json=fixed32List,proto3" json:"fixed32_list,omitempty"`
	Fixed64List  []uint64 `protobuf:"fixed64,8,rep,packed,name=fixed64_list,json=fixed64List,proto3" json:"fixed64_list,omitempty"`
	Sfixed32List []int32  `protobuf:"fixed32,9,rep,packed,name=sfixed32_list,json=sfixed32List,proto3" json:"sfixed32_list,omitempty"`
	Sfixed64List []int64  `protobuf:"fixed64,10,rep,packed,name=sfixed64_list,json=sfixed64List,proto3" json:"sfixed64_list,omitempty"`
	// Repeated floating point (packed encoding)
	FloatList  []float32 `protobuf:"fixed32,11,rep,packed,name=float_list,json=floatList,proto3" json:"float_list,omitempty"`
	DoubleList []float64 `protobuf:"fixed64,12,rep,packed,name=double_list,json=doubleList,proto3" json:"double_list,omitempty"`
	// Repeated boolean (packed encoding)
	BoolList []bool `protobuf:"varint,13,rep,packed,name=bool_list,json=boolList,proto3" json:"bool_list,omitempty"`
	// Repeated string and bytes (NOT packed - length-delimited)
	StringList []string `protobuf:"bytes,14,rep,name=string_list,json=stringList,proto3" json:"string_list,omitempty"`
	BytesList  [][]byte `protobuf:"bytes,15,rep,name=bytes_list,json=bytesList,proto3" json:"bytes_list,omitempty"`
	// Repeated message type (NOT packed)
	AddressList   []*Address `protobuf:"bytes,16,rep,name=address_list,json=addressList,proto3" json:"address_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllRepeatedTypes) Reset() {
	*x = AllRepeatedTypes{}
	mi := &file_comprehensive_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllRepeatedTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllRepeatedTypes) ProtoMessage() {}

func (x *AllRepeatedTypes) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllRepeatedTypes.ProtoReflect.Descriptor instead.
func (*AllRepeatedTypes) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{1}
}

func (x *AllRepeatedTypes) GetInt32List() []int32 {
	if x != nil {
		return x.Int32List
	}
	return nil
}

func (x *AllRepeatedTypes) GetInt64List() []int64 {
	if x != nil {
		return x.Int64List
	}
	return nil
}

func (x *AllRepeatedTypes) GetUint32List() []uint32 {
	if x != nil {
		return x.Uint32List
	}
	return nil
}

func (x *AllRepeatedTypes) GetUint64List() []uint64 {
	if x != nil {
		return x.Uint64List
	}
	return nil
}

func (x *AllRepeatedTypes) GetSint32List() []int32 {
	if x != nil {
		return x.Sint32List
	}
	return nil
}

func (x *AllRepeatedTypes) GetSint64List() []int64 {
	if x != nil {
		return x.Sint64List
	}
	return nil
}

func (x *AllRepeatedTypes) GetFixed32List() []uint32 {
	if x != nil {
		return x.Fixed32List
	}
	return nil
}

func (x *AllRepeatedTypes) GetFixed64List() []uint64 {
	if x != nil {
		return x.Fixed64List
	}
	return nil
}

func (x *AllRepeatedTypes) GetSfixed32List() []int32 {
	if x != nil {
		return x.Sfixed32List
	}
	return nil
}

func (x *AllRepeatedTypes) GetSfixed64List() []int64 {
	if x != nil {
		return x.Sfixed64List
	}
	return nil
}

func (x *AllRepeatedTypes) GetFloatList() []float32 {
	if x != nil {
		return x.FloatList
	}
	return nil
}

func (x *AllRepeatedTypes) GetDoubleList() []float64 {
	if x != nil {
		return x.DoubleList
	}
	return nil
}

func (x *AllRepeatedTypes) GetBoolList() []bool {
	if x != nil {
		return x.BoolList
	}
	return nil
}

func (x *AllRepeatedTypes) GetStringList() []string {
	if x != nil {
		return x.StringList
	}
	return nil
}

func (x *AllRepeatedTypes) GetBytesList() [][]byte {
	if x != nil {
		return x.BytesList
	}
	return nil
}

func (x *AllRepeatedTypes) GetAddressList() []*Address {
	if x != nil {
		return x.AddressList
	}
	return nil
}

// Message testing int32 keys with different value types
type MapInt32Keys struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Int32ToString  map[int32]string       `protobuf:"bytes,1,rep,name=int32_to_string,json=int32ToString,proto3" json:"int32_to_string,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Int32ToInt32   map[int32]int32        `protobuf:"bytes,2,rep,name=int32_to_int32,json=int32ToInt32,proto3" json:"int32_to_int32,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Int32ToMessage map[int32]*Money       `protobuf:"bytes,3,rep,name=int32_to_message,json=int32ToMessage,proto3" json:"int32_to_message,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MapInt32Keys) Reset() {
	*x = MapInt32Keys{}
	mi := &file_comprehensive_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapInt32Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapInt32Keys) ProtoMessage() {}

func (x *MapInt32Keys) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapInt32Keys.ProtoReflect.Descriptor instead.
func (*MapInt32Keys) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{2}
}

func (x *MapInt32Keys) GetInt32ToString() map[int32]string {
	if x != nil {
		return x.Int32ToString
	}
	return nil
}

func (x *MapInt32Keys) GetInt32ToInt32() map[int32]int32 {
	if x != nil {
		return x.Int32ToInt32
	}
	return nil
}

func (x *MapInt32Keys) GetInt32ToMessage() map[int32]*Money {
	if x != nil {
		return x.Int32ToMessage
	}
	return nil
}

// Message testing int64 keys
type MapInt64Keys struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Int64ToString map[int64]string       `protobuf:"bytes,1,rep,name=int64_to_string,json=int64ToString,proto3" json:"int64_to_string,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Int64ToDouble map[int64]float64      `protobuf:"bytes,2,rep,name=int64_to_double,json=int64ToDouble,proto3" json:"int64_to_double,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapInt64Keys) Reset() {
	*x = MapInt64Keys{}
	mi := &file_comprehensive_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapInt64Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapInt64Keys) ProtoMessage() {}

func (x *MapInt64Keys) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapInt64Keys.ProtoReflect.Descriptor instead.
func (*MapInt64Keys) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{3}
}

func (x *MapInt64Keys) GetInt64ToString() map[int64]string {
	if x != nil {
		return x.Int64ToString
	}
	return nil
}

func (x *MapInt64Keys) GetInt64ToDouble() map[int64]float64 {
	if x != nil {
		return x.Int64ToDouble
	}
	return nil
}

// Message testing uint32/uint64 keys
type MapUintKeys struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Uint32ToString map[uint32]string      `protobuf:"bytes,1,rep,name=uint32_to_string,json=uint32ToString,proto3" json:"uint32_to_string,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Uint64ToBytes  map[uint64][]byte      `protobuf:"bytes,2,rep,name=uint64_to_bytes,json=uint64ToBytes,proto3" json:"uint64_to_bytes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MapUintKeys) Reset() {
	*x = MapUintKeys{}
	mi := &file_comprehensive_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapUintKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapUintKeys) ProtoMessage() {}

func (x *MapUintKeys) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapUintKeys.ProtoReflect.Descriptor instead.
func (*MapUintKeys) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{4}
}

func (x *MapUintKeys) GetUint32ToString() map[uint32]string {
	if x != nil {
		return x.Uint32ToString
	}
	return nil
}

func (x *MapUintKeys) GetUint64ToBytes() map[uint64][]byte {
	if x != nil {
		return x.Uint64ToBytes
	}
	return nil
}

// Message testing sint32/sint64 keys
type MapSintKeys struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sint32ToInt32 map[int32]int32        `protobuf:"bytes,1,rep,name=sint32_to_int32,json=sint32ToInt32,proto3" json:"sint32_to_int32,omitempty" protobuf_key:"zigzag32,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Sint64ToInt64 map[int64]int64        `protobuf:"bytes,2,rep,name=sint64_to_int64,json=sint64ToInt64,proto3" json:"sint64_to_int64,omitempty" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapSintKeys) Reset() {
	*x = MapSintKeys{}
	mi := &file_comprehensive_test_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapSintKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSintKeys) ProtoMessage() {}

func (x *MapSintKeys) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSintKeys.ProtoReflect.Descriptor instead.
func (*MapSintKeys) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{5}
}

func (x *MapSintKeys) GetSint32ToInt32() map[int32]int32 {
	if x != nil {
		return x.Sint32ToInt32
	}
	return nil
}

func (x *MapSintKeys) GetSint64ToInt64() map[int64]int64 {
	if x != nil {
		return x.Sint64ToInt64
	}
	return nil
}

// Message testing fixed-width keys
type MapFixedKeys struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Fixed32ToString map[uint32]string      `protobuf:"bytes,1,rep,name=fixed32_to_string,json=fixed32ToString,proto3" json:"fixed32_to_string,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Fixed64ToString map[uint64]string      `protobuf:"bytes,2,rep,name=fixed64_to_string,json=fixed64ToString,proto3" json:"fixed64_to_string,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Sfixed32ToInt32 map[int32]int32        `protobuf:"bytes,3,rep,name=sfixed32_to_int32,json=sfixed32ToInt32,proto3" json:"sfixed32_to_int32,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Sfixed64ToInt64 map[int64]int64        `protobuf:"bytes,4,rep,name=sfixed64_to_int64,json=sfixed64ToInt64,proto3" json:"sfixed64_to_int64,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MapFixedKeys) Reset() {
	*x = MapFixedKeys{}
	mi := &file_comprehensive_test_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapFixedKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapFixedKeys) ProtoMessage() {}

func (x *MapFixedKeys) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapFixedKeys.ProtoReflect.Descriptor instead.
func (*MapFixedKeys) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{6}
}

func (x *MapFixedKeys) GetFixed32ToString() map[uint32]string {
	if x != nil {
		return x.Fixed32ToString
	}
	return nil
}

func (x *MapFixedKeys) GetFixed64ToString() map[uint64]string {
	if x != nil {
		return x.Fixed64ToString
	}
	return nil
}

func (x *MapFixedKeys) GetSfixed32ToInt32() map[int32]int32 {
	if x != nil {
		return x.Sfixed32ToInt32
	}
	return nil
}

func (x *MapFixedKeys) GetSfixed64ToInt64() map[int64]int64 {
	if x != nil {
		return x.Sfixed64ToInt64
	}
	return nil
}

// Message testing bool and string keys
type MapBoolStringKeys struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BoolToString    map[bool]string        `protobuf:"bytes,1,rep,name=bool_to_string,json=boolToString,proto3" json:"bool_to_string,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringToString  map[string]string      `protobuf:"bytes,2,rep,name=string_to_string,json=stringToString,proto3" json:"string_to_string,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringToInt32   map[string]int32       `protobuf:"bytes,3,rep,name=string_to_int32,json=stringToInt32,proto3" json:"string_to_int32,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	StringToMessage map[string]*Address    `protobuf:"bytes,4,rep,name=string_to_message,json=stringToMessage,proto3" json:"string_to_message,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MapBoolStringKeys) Reset() {
	*x = MapBoolStringKeys{}
	mi := &file_comprehensive_test_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapBoolStringKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapBoolStringKeys) ProtoMessage() {}

func (x *MapBoolStringKeys) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapBoolStringKeys.ProtoReflect.Descriptor instead.
func (*MapBoolStringKeys) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{7}
}

func (x *MapBoolStringKeys) GetBoolToString() map[bool]string {
	if x != nil {
		return x.BoolToString
	}
	return nil
}

func (x *MapBoolStringKeys) GetStringToString() map[string]string {
	if x != nil {
		return x.StringToString
	}
	return nil
}

func (x *MapBoolStringKeys) GetStringToInt32() map[string]int32 {
	if x != nil {
		return x.StringToInt32
	}
	return nil
}

func (x *MapBoolStringKeys) GetStringToMessage() map[string]*Address {
	if x != nil {
		return x.StringToMessage
	}
	return nil
}

// Level 3 nested message
type Level3 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Depth         int32                  `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Level3) Reset() {
	*x = Level3{}
	mi := &file_comprehensive_test_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Level3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level3) ProtoMessage() {}

func (x *Level3) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level3.ProtoReflect.Descriptor instead.
func (*Level3) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{8}
}

func (x *Level3) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Level3) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

// Level 2 nested message
type Level2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Child         *Level3                `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
	Children      []*Level3              `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Level2) Reset() {
	*x = Level2{}
	mi := &file_comprehensive_test_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Level2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level2) ProtoMessage() {}

func (x *Level2) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level2.ProtoReflect.Descriptor instead.
func (*Level2) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{9}
}

func (x *Level2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Level2) GetChild() *Level3 {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *Level2) GetChildren() []*Level3 {
	if x != nil {
		return x.Children
	}
	return nil
}

// Level 1 nested message
type Level1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Child         *Level2                `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
	ChildMap      map[string]*Level2     `protobuf:"bytes,3,rep,name=child_map,json=childMap,proto3" json:"child_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Level1) Reset() {
	*x = Level1{}
	mi := &file_comprehensive_test_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Level1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level1) ProtoMessage() {}

func (x *Level1) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level1.ProtoReflect.Descriptor instead.
func (*Level1) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{10}
}

func (x *Level1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Level1) GetChild() *Level2 {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *Level1) GetChildMap() map[string]*Level2 {
	if x != nil {
		return x.ChildMap
	}
	return nil
}

// Root message with nested structure
type NestedStructure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootName      string                 `protobuf:"bytes,1,opt,name=root_name,json=rootName,proto3" json:"root_name,omitempty"`
	Child         *Level1                `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
	Children      []*Level1              `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NestedStructure) Reset() {
	*x = NestedStructure{}
	mi := &file_comprehensive_test_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NestedStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedStructure) ProtoMessage() {}

func (x *NestedStructure) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedStructure.ProtoReflect.Descriptor instead.
func (*NestedStructure) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{11}
}

func (x *NestedStructure) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

func (x *NestedStructure) GetChild() *Level1 {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *NestedStructure) GetChildren() []*Level1 {
	if x != nil {
		return x.Children
	}
	return nil
}

// Message with optional fields
type OptionalFieldsTest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Regular field (no has method)
	RegularInt32 int32 `protobuf:"varint,1,opt,name=regular_int32,json=regularInt32,proto3" json:"regular_int32,omitempty"`
	// Optional fields (generates has methods)
	OptionalInt32   *int32   `protobuf:"varint,2,opt,name=optional_int32,json=optionalInt32,proto3,oneof" json:"optional_int32,omitempty"`
	OptionalString  *string  `protobuf:"bytes,3,opt,name=optional_string,json=optionalString,proto3,oneof" json:"optional_string,omitempty"`
	OptionalBool    *bool    `protobuf:"varint,4,opt,name=optional_bool,json=optionalBool,proto3,oneof" json:"optional_bool,omitempty"`
	OptionalDouble  *float64 `protobuf:"fixed64,5,opt,name=optional_double,json=optionalDouble,proto3,oneof" json:"optional_double,omitempty"`
	OptionalMessage *Address `protobuf:"bytes,6,opt,name=optional_message,json=optionalMessage,proto3,oneof" json:"optional_message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OptionalFieldsTest) Reset() {
	*x = OptionalFieldsTest{}
	mi := &file_comprehensive_test_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionalFieldsTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalFieldsTest) ProtoMessage() {}

func (x *OptionalFieldsTest) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalFieldsTest.ProtoReflect.Descriptor instead.
func (*OptionalFieldsTest) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{12}
}

func (x *OptionalFieldsTest) GetRegularInt32() int32 {
	if x != nil {
		return x.RegularInt32
	}
	return 0
}

func (x *OptionalFieldsTest) GetOptionalInt32() int32 {
	if x != nil && x.OptionalInt32 != nil {
		return *x.OptionalInt32
	}
	return 0
}

func (x *OptionalFieldsTest) GetOptionalString() string {
	if x != nil && x.OptionalString != nil {
		return *x.OptionalString
	}
	return ""
}

func (x *OptionalFieldsTest) GetOptionalBool() bool {
	if x != nil && x.OptionalBool != nil {
		return *x.OptionalBool
	}
	return false
}

func (x *OptionalFieldsTest) GetOptionalDouble() float64 {
	if x != nil && x.OptionalDouble != nil {
		return *x.OptionalDouble
	}
	return 0
}

func (x *OptionalFieldsTest) GetOptionalMessage() *Address {
	if x != nil {
		return x.OptionalMessage
	}
	return nil
}

// Person with address and financial info
type Person struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age           int32                  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	HomeAddress   *Address               `protobuf:"bytes,3,opt,name=home_address,json=homeAddress,proto3" json:"home_address,omitempty"`
	WorkAddress   *Address               `protobuf:"bytes,4,opt,name=work_address,json=workAddress,proto3" json:"work_address,omitempty"`
	Accounts      []*Money               `protobuf:"bytes,5,rep,name=accounts,proto3" json:"accounts,omitempty"`
	CreatedAt     *Timestamp             `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Location      *Coordinates           `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_comprehensive_test_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{13}
}

func (x *Person) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Person) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Person) GetHomeAddress() *Address {
	if x != nil {
		return x.HomeAddress
	}
	return nil
}

func (x *Person) GetWorkAddress() *Address {
	if x != nil {
		return x.WorkAddress
	}
	return nil
}

func (x *Person) GetAccounts() []*Money {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *Person) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Person) GetLocation() *Coordinates {
	if x != nil {
		return x.Location
	}
	return nil
}

// Edge case values
type EdgeCases struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Zero values
	ZeroInt32   int32  `protobuf:"varint,1,opt,name=zero_int32,json=zeroInt32,proto3" json:"zero_int32,omitempty"`
	EmptyString string `protobuf:"bytes,2,opt,name=empty_string,json=emptyString,proto3" json:"empty_string,omitempty"`
	EmptyBytes  []byte `protobuf:"bytes,3,opt,name=empty_bytes,json=emptyBytes,proto3" json:"empty_bytes,omitempty"`
	// Negative numbers (using sint for efficient encoding)
	NegativeSint32 int32 `protobuf:"zigzag32,4,opt,name=negative_sint32,json=negativeSint32,proto3" json:"negative_sint32,omitempty"`
	NegativeSint64 int64 `protobuf:"zigzag64,5,opt,name=negative_sint64,json=negativeSint64,proto3" json:"negative_sint64,omitempty"`
	// Maximum values
	MaxInt32  int32  `protobuf:"varint,6,opt,name=max_int32,json=maxInt32,proto3" json:"max_int32,omitempty"`    // 2147483647
	MaxInt64  int64  `protobuf:"varint,7,opt,name=max_int64,json=maxInt64,proto3" json:"max_int64,omitempty"`    // 9223372036854775807
	MaxUint32 uint32 `protobuf:"varint,8,opt,name=max_uint32,json=maxUint32,proto3" json:"max_uint32,omitempty"` // 4294967295
	MaxUint64 uint64 `protobuf:"varint,9,opt,name=max_uint64,json=maxUint64,proto3" json:"max_uint64,omitempty"` // 18446744073709551615 (as string in PHP)
	// Minimum values
	MinInt32 int32 `protobuf:"varint,10,opt,name=min_int32,json=minInt32,proto3" json:"min_int32,omitempty"` // -2147483648
	MinInt64 int64 `protobuf:"varint,11,opt,name=min_int64,json=minInt64,proto3" json:"min_int64,omitempty"` // -9223372036854775808
	// Special floating point values
	FloatZero        float32 `protobuf:"fixed32,12,opt,name=float_zero,json=floatZero,proto3" json:"float_zero,omitempty"`
	FloatInfinity    float32 `protobuf:"fixed32,13,opt,name=float_infinity,json=floatInfinity,proto3" json:"float_infinity,omitempty"`
	FloatNegInfinity float32 `protobuf:"fixed32,14,opt,name=float_neg_infinity,json=floatNegInfinity,proto3" json:"float_neg_infinity,omitempty"`
	DoubleMax        float64 `protobuf:"fixed64,15,opt,name=double_max,json=doubleMax,proto3" json:"double_max,omitempty"`
	DoubleMin        float64 `protobuf:"fixed64,16,opt,name=double_min,json=doubleMin,proto3" json:"double_min,omitempty"`
	// Unicode strings
	UnicodeString   string `protobuf:"bytes,17,opt,name=unicode_string,json=unicodeString,proto3" json:"unicode_string,omitempty"`       // Test emojis, chinese, etc
	MultilineString string `protobuf:"bytes,18,opt,name=multiline_string,json=multilineString,proto3" json:"multiline_string,omitempty"` // String with \n
	// Large bytes field
	LargeBytes    []byte `protobuf:"bytes,19,opt,name=large_bytes,json=largeBytes,proto3" json:"large_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EdgeCases) Reset() {
	*x = EdgeCases{}
	mi := &file_comprehensive_test_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EdgeCases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeCases) ProtoMessage() {}

func (x *EdgeCases) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeCases.ProtoReflect.Descriptor instead.
func (*EdgeCases) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{14}
}

func (x *EdgeCases) GetZeroInt32() int32 {
	if x != nil {
		return x.ZeroInt32
	}
	return 0
}

func (x *EdgeCases) GetEmptyString() string {
	if x != nil {
		return x.EmptyString
	}
	return ""
}

func (x *EdgeCases) GetEmptyBytes() []byte {
	if x != nil {
		return x.EmptyBytes
	}
	return nil
}

func (x *EdgeCases) GetNegativeSint32() int32 {
	if x != nil {
		return x.NegativeSint32
	}
	return 0
}

func (x *EdgeCases) GetNegativeSint64() int64 {
	if x != nil {
		return x.NegativeSint64
	}
	return 0
}

func (x *EdgeCases) GetMaxInt32() int32 {
	if x != nil {
		return x.MaxInt32
	}
	return 0
}

func (x *EdgeCases) GetMaxInt64() int64 {
	if x != nil {
		return x.MaxInt64
	}
	return 0
}

func (x *EdgeCases) GetMaxUint32() uint32 {
	if x != nil {
		return x.MaxUint32
	}
	return 0
}

func (x *EdgeCases) GetMaxUint64() uint64 {
	if x != nil {
		return x.MaxUint64
	}
	return 0
}

func (x *EdgeCases) GetMinInt32() int32 {
	if x != nil {
		return x.MinInt32
	}
	return 0
}

func (x *EdgeCases) GetMinInt64() int64 {
	if x != nil {
		return x.MinInt64
	}
	return 0
}

func (x *EdgeCases) GetFloatZero() float32 {
	if x != nil {
		return x.FloatZero
	}
	return 0
}

func (x *EdgeCases) GetFloatInfinity() float32 {
	if x != nil {
		return x.FloatInfinity
	}
	return 0
}

func (x *EdgeCases) GetFloatNegInfinity() float32 {
	if x != nil {
		return x.FloatNegInfinity
	}
	return 0
}

func (x *EdgeCases) GetDoubleMax() float64 {
	if x != nil {
		return x.DoubleMax
	}
	return 0
}

func (x *EdgeCases) GetDoubleMin() float64 {
	if x != nil {
		return x.DoubleMin
	}
	return 0
}

func (x *EdgeCases) GetUnicodeString() string {
	if x != nil {
		return x.UnicodeString
	}
	return ""
}

func (x *EdgeCases) GetMultilineString() string {
	if x != nil {
		return x.MultilineString
	}
	return ""
}

func (x *EdgeCases) GetLargeBytes() []byte {
	if x != nil {
		return x.LargeBytes
	}
	return nil
}

// Message named with reserved word
type Empty_ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty_) Reset() {
	*x = Empty_{}
	mi := &file_comprehensive_test_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty_) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty_) ProtoMessage() {}

func (x *Empty_) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty_.ProtoReflect.Descriptor instead.
func (*Empty_) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{15}
}

func (x *Empty_) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Message with field names that are reserved words
type ReservedFieldNames struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Class_        string                 `protobuf:"bytes,1,opt,name=class_,json=class,proto3" json:"class_,omitempty"`             // PHP reserved: class
	Function_     string                 `protobuf:"bytes,2,opt,name=function_,json=function,proto3" json:"function_,omitempty"`    // PHP reserved: function
	Int_          int32                  `protobuf:"varint,3,opt,name=int_,json=int,proto3" json:"int_,omitempty"`                  // PHP reserved: int
	String_       string                 `protobuf:"bytes,4,opt,name=string_,json=string,proto3" json:"string_,omitempty"`          // PHP reserved: string
	Bool_         bool                   `protobuf:"varint,5,opt,name=bool_,json=bool,proto3" json:"bool_,omitempty"`               // PHP reserved: bool
	Exception_    string                 `protobuf:"bytes,6,opt,name=exception_,json=exception,proto3" json:"exception_,omitempty"` // PHP class: Exception
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReservedFieldNames) Reset() {
	*x = ReservedFieldNames{}
	mi := &file_comprehensive_test_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReservedFieldNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservedFieldNames) ProtoMessage() {}

func (x *ReservedFieldNames) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservedFieldNames.ProtoReflect.Descriptor instead.
func (*ReservedFieldNames) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{16}
}

func (x *ReservedFieldNames) GetClass_() string {
	if x != nil {
		return x.Class_
	}
	return ""
}

func (x *ReservedFieldNames) GetFunction_() string {
	if x != nil {
		return x.Function_
	}
	return ""
}

func (x *ReservedFieldNames) GetInt_() int32 {
	if x != nil {
		return x.Int_
	}
	return 0
}

func (x *ReservedFieldNames) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *ReservedFieldNames) GetBool_() bool {
	if x != nil {
		return x.Bool_
	}
	return false
}

func (x *ReservedFieldNames) GetException_() string {
	if x != nil {
		return x.Exception_
	}
	return ""
}

// Message with many fields for stress testing
type StressTest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 50 string fields
	Field_001 string `protobuf:"bytes,1,opt,name=field_001,json=field001,proto3" json:"field_001,omitempty"`
	Field_002 string `protobuf:"bytes,2,opt,name=field_002,json=field002,proto3" json:"field_002,omitempty"`
	Field_003 string `protobuf:"bytes,3,opt,name=field_003,json=field003,proto3" json:"field_003,omitempty"`
	Field_004 string `protobuf:"bytes,4,opt,name=field_004,json=field004,proto3" json:"field_004,omitempty"`
	Field_005 string `protobuf:"bytes,5,opt,name=field_005,json=field005,proto3" json:"field_005,omitempty"`
	Field_006 string `protobuf:"bytes,6,opt,name=field_006,json=field006,proto3" json:"field_006,omitempty"`
	Field_007 string `protobuf:"bytes,7,opt,name=field_007,json=field007,proto3" json:"field_007,omitempty"`
	Field_008 string `protobuf:"bytes,8,opt,name=field_008,json=field008,proto3" json:"field_008,omitempty"`
	Field_009 string `protobuf:"bytes,9,opt,name=field_009,json=field009,proto3" json:"field_009,omitempty"`
	Field_010 string `protobuf:"bytes,10,opt,name=field_010,json=field010,proto3" json:"field_010,omitempty"`
	Field_011 string `protobuf:"bytes,11,opt,name=field_011,json=field011,proto3" json:"field_011,omitempty"`
	Field_012 string `protobuf:"bytes,12,opt,name=field_012,json=field012,proto3" json:"field_012,omitempty"`
	Field_013 string `protobuf:"bytes,13,opt,name=field_013,json=field013,proto3" json:"field_013,omitempty"`
	Field_014 string `protobuf:"bytes,14,opt,name=field_014,json=field014,proto3" json:"field_014,omitempty"`
	Field_015 string `protobuf:"bytes,15,opt,name=field_015,json=field015,proto3" json:"field_015,omitempty"`
	Field_016 string `protobuf:"bytes,16,opt,name=field_016,json=field016,proto3" json:"field_016,omitempty"`
	Field_017 string `protobuf:"bytes,17,opt,name=field_017,json=field017,proto3" json:"field_017,omitempty"`
	Field_018 string `protobuf:"bytes,18,opt,name=field_018,json=field018,proto3" json:"field_018,omitempty"`
	Field_019 string `protobuf:"bytes,19,opt,name=field_019,json=field019,proto3" json:"field_019,omitempty"`
	Field_020 string `protobuf:"bytes,20,opt,name=field_020,json=field020,proto3" json:"field_020,omitempty"`
	Field_021 string `protobuf:"bytes,21,opt,name=field_021,json=field021,proto3" json:"field_021,omitempty"`
	Field_022 string `protobuf:"bytes,22,opt,name=field_022,json=field022,proto3" json:"field_022,omitempty"`
	Field_023 string `protobuf:"bytes,23,opt,name=field_023,json=field023,proto3" json:"field_023,omitempty"`
	Field_024 string `protobuf:"bytes,24,opt,name=field_024,json=field024,proto3" json:"field_024,omitempty"`
	Field_025 string `protobuf:"bytes,25,opt,name=field_025,json=field025,proto3" json:"field_025,omitempty"`
	Field_026 string `protobuf:"bytes,26,opt,name=field_026,json=field026,proto3" json:"field_026,omitempty"`
	Field_027 string `protobuf:"bytes,27,opt,name=field_027,json=field027,proto3" json:"field_027,omitempty"`
	Field_028 string `protobuf:"bytes,28,opt,name=field_028,json=field028,proto3" json:"field_028,omitempty"`
	Field_029 string `protobuf:"bytes,29,opt,name=field_029,json=field029,proto3" json:"field_029,omitempty"`
	Field_030 string `protobuf:"bytes,30,opt,name=field_030,json=field030,proto3" json:"field_030,omitempty"`
	Field_031 string `protobuf:"bytes,31,opt,name=field_031,json=field031,proto3" json:"field_031,omitempty"`
	Field_032 string `protobuf:"bytes,32,opt,name=field_032,json=field032,proto3" json:"field_032,omitempty"`
	Field_033 string `protobuf:"bytes,33,opt,name=field_033,json=field033,proto3" json:"field_033,omitempty"`
	Field_034 string `protobuf:"bytes,34,opt,name=field_034,json=field034,proto3" json:"field_034,omitempty"`
	Field_035 string `protobuf:"bytes,35,opt,name=field_035,json=field035,proto3" json:"field_035,omitempty"`
	Field_036 string `protobuf:"bytes,36,opt,name=field_036,json=field036,proto3" json:"field_036,omitempty"`
	Field_037 string `protobuf:"bytes,37,opt,name=field_037,json=field037,proto3" json:"field_037,omitempty"`
	Field_038 string `protobuf:"bytes,38,opt,name=field_038,json=field038,proto3" json:"field_038,omitempty"`
	Field_039 string `protobuf:"bytes,39,opt,name=field_039,json=field039,proto3" json:"field_039,omitempty"`
	Field_040 string `protobuf:"bytes,40,opt,name=field_040,json=field040,proto3" json:"field_040,omitempty"`
	Field_041 string `protobuf:"bytes,41,opt,name=field_041,json=field041,proto3" json:"field_041,omitempty"`
	Field_042 string `protobuf:"bytes,42,opt,name=field_042,json=field042,proto3" json:"field_042,omitempty"`
	Field_043 string `protobuf:"bytes,43,opt,name=field_043,json=field043,proto3" json:"field_043,omitempty"`
	Field_044 string `protobuf:"bytes,44,opt,name=field_044,json=field044,proto3" json:"field_044,omitempty"`
	Field_045 string `protobuf:"bytes,45,opt,name=field_045,json=field045,proto3" json:"field_045,omitempty"`
	Field_046 string `protobuf:"bytes,46,opt,name=field_046,json=field046,proto3" json:"field_046,omitempty"`
	Field_047 string `protobuf:"bytes,47,opt,name=field_047,json=field047,proto3" json:"field_047,omitempty"`
	Field_048 string `protobuf:"bytes,48,opt,name=field_048,json=field048,proto3" json:"field_048,omitempty"`
	Field_049 string `protobuf:"bytes,49,opt,name=field_049,json=field049,proto3" json:"field_049,omitempty"`
	Field_050 string `protobuf:"bytes,50,opt,name=field_050,json=field050,proto3" json:"field_050,omitempty"`
	// Mix of different types
	IntList       []int32           `protobuf:"varint,51,rep,packed,name=int_list,json=intList,proto3" json:"int_list,omitempty"`
	Metadata      map[string]string `protobuf:"bytes,52,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Address       *Address          `protobuf:"bytes,53,opt,name=address,proto3" json:"address,omitempty"`
	Transactions  []*Money          `protobuf:"bytes,54,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StressTest) Reset() {
	*x = StressTest{}
	mi := &file_comprehensive_test_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StressTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StressTest) ProtoMessage() {}

func (x *StressTest) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StressTest.ProtoReflect.Descriptor instead.
func (*StressTest) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{17}
}

func (x *StressTest) GetField_001() string {
	if x != nil {
		return x.Field_001
	}
	return ""
}

func (x *StressTest) GetField_002() string {
	if x != nil {
		return x.Field_002
	}
	return ""
}

func (x *StressTest) GetField_003() string {
	if x != nil {
		return x.Field_003
	}
	return ""
}

func (x *StressTest) GetField_004() string {
	if x != nil {
		return x.Field_004
	}
	return ""
}

func (x *StressTest) GetField_005() string {
	if x != nil {
		return x.Field_005
	}
	return ""
}

func (x *StressTest) GetField_006() string {
	if x != nil {
		return x.Field_006
	}
	return ""
}

func (x *StressTest) GetField_007() string {
	if x != nil {
		return x.Field_007
	}
	return ""
}

func (x *StressTest) GetField_008() string {
	if x != nil {
		return x.Field_008
	}
	return ""
}

func (x *StressTest) GetField_009() string {
	if x != nil {
		return x.Field_009
	}
	return ""
}

func (x *StressTest) GetField_010() string {
	if x != nil {
		return x.Field_010
	}
	return ""
}

func (x *StressTest) GetField_011() string {
	if x != nil {
		return x.Field_011
	}
	return ""
}

func (x *StressTest) GetField_012() string {
	if x != nil {
		return x.Field_012
	}
	return ""
}

func (x *StressTest) GetField_013() string {
	if x != nil {
		return x.Field_013
	}
	return ""
}

func (x *StressTest) GetField_014() string {
	if x != nil {
		return x.Field_014
	}
	return ""
}

func (x *StressTest) GetField_015() string {
	if x != nil {
		return x.Field_015
	}
	return ""
}

func (x *StressTest) GetField_016() string {
	if x != nil {
		return x.Field_016
	}
	return ""
}

func (x *StressTest) GetField_017() string {
	if x != nil {
		return x.Field_017
	}
	return ""
}

func (x *StressTest) GetField_018() string {
	if x != nil {
		return x.Field_018
	}
	return ""
}

func (x *StressTest) GetField_019() string {
	if x != nil {
		return x.Field_019
	}
	return ""
}

func (x *StressTest) GetField_020() string {
	if x != nil {
		return x.Field_020
	}
	return ""
}

func (x *StressTest) GetField_021() string {
	if x != nil {
		return x.Field_021
	}
	return ""
}

func (x *StressTest) GetField_022() string {
	if x != nil {
		return x.Field_022
	}
	return ""
}

func (x *StressTest) GetField_023() string {
	if x != nil {
		return x.Field_023
	}
	return ""
}

func (x *StressTest) GetField_024() string {
	if x != nil {
		return x.Field_024
	}
	return ""
}

func (x *StressTest) GetField_025() string {
	if x != nil {
		return x.Field_025
	}
	return ""
}

func (x *StressTest) GetField_026() string {
	if x != nil {
		return x.Field_026
	}
	return ""
}

func (x *StressTest) GetField_027() string {
	if x != nil {
		return x.Field_027
	}
	return ""
}

func (x *StressTest) GetField_028() string {
	if x != nil {
		return x.Field_028
	}
	return ""
}

func (x *StressTest) GetField_029() string {
	if x != nil {
		return x.Field_029
	}
	return ""
}

func (x *StressTest) GetField_030() string {
	if x != nil {
		return x.Field_030
	}
	return ""
}

func (x *StressTest) GetField_031() string {
	if x != nil {
		return x.Field_031
	}
	return ""
}

func (x *StressTest) GetField_032() string {
	if x != nil {
		return x.Field_032
	}
	return ""
}

func (x *StressTest) GetField_033() string {
	if x != nil {
		return x.Field_033
	}
	return ""
}

func (x *StressTest) GetField_034() string {
	if x != nil {
		return x.Field_034
	}
	return ""
}

func (x *StressTest) GetField_035() string {
	if x != nil {
		return x.Field_035
	}
	return ""
}

func (x *StressTest) GetField_036() string {
	if x != nil {
		return x.Field_036
	}
	return ""
}

func (x *StressTest) GetField_037() string {
	if x != nil {
		return x.Field_037
	}
	return ""
}

func (x *StressTest) GetField_038() string {
	if x != nil {
		return x.Field_038
	}
	return ""
}

func (x *StressTest) GetField_039() string {
	if x != nil {
		return x.Field_039
	}
	return ""
}

func (x *StressTest) GetField_040() string {
	if x != nil {
		return x.Field_040
	}
	return ""
}

func (x *StressTest) GetField_041() string {
	if x != nil {
		return x.Field_041
	}
	return ""
}

func (x *StressTest) GetField_042() string {
	if x != nil {
		return x.Field_042
	}
	return ""
}

func (x *StressTest) GetField_043() string {
	if x != nil {
		return x.Field_043
	}
	return ""
}

func (x *StressTest) GetField_044() string {
	if x != nil {
		return x.Field_044
	}
	return ""
}

func (x *StressTest) GetField_045() string {
	if x != nil {
		return x.Field_045
	}
	return ""
}

func (x *StressTest) GetField_046() string {
	if x != nil {
		return x.Field_046
	}
	return ""
}

func (x *StressTest) GetField_047() string {
	if x != nil {
		return x.Field_047
	}
	return ""
}

func (x *StressTest) GetField_048() string {
	if x != nil {
		return x.Field_048
	}
	return ""
}

func (x *StressTest) GetField_049() string {
	if x != nil {
		return x.Field_049
	}
	return ""
}

func (x *StressTest) GetField_050() string {
	if x != nil {
		return x.Field_050
	}
	return ""
}

func (x *StressTest) GetIntList() []int32 {
	if x != nil {
		return x.IntList
	}
	return nil
}

func (x *StressTest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StressTest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StressTest) GetTransactions() []*Money {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// Order item
type OrderItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName   string                 `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice     *Money                 `protobuf:"bytes,4,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	TotalPrice    *Money                 `protobuf:"bytes,5,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // color, size, etc
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderItem) Reset() {
	*x = OrderItem{}
	mi := &file_comprehensive_test_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItem) ProtoMessage() {}

func (x *OrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItem.ProtoReflect.Descriptor instead.
func (*OrderItem) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{18}
}

func (x *OrderItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OrderItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderItem) GetUnitPrice() *Money {
	if x != nil {
		return x.UnitPrice
	}
	return nil
}

func (x *OrderItem) GetTotalPrice() *Money {
	if x != nil {
		return x.TotalPrice
	}
	return nil
}

func (x *OrderItem) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Customer order (realistic use case)
// Note: status as int32 (0=unspecified, 1=pending, 2=confirmed, 3=shipped, 4=delivered, 5=cancelled)
// Enums not yet supported by Proteus
type Order struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	OrderId     string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CustomerId  string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Status      int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // Order status code
	CreatedAt   *Timestamp             `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *Timestamp             `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	DeliveredAt *Timestamp             `protobuf:"bytes,6,opt,name=delivered_at,json=deliveredAt,proto3,oneof" json:"delivered_at,omitempty"`
	// Items
	Items []*OrderItem `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
	// Addresses
	ShippingAddress *Address `protobuf:"bytes,8,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`
	BillingAddress  *Address `protobuf:"bytes,9,opt,name=billing_address,json=billingAddress,proto3,oneof" json:"billing_address,omitempty"` // may be same as shipping
	// Pricing
	Subtotal     *Money `protobuf:"bytes,10,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Tax          *Money `protobuf:"bytes,11,opt,name=tax,proto3" json:"tax,omitempty"`
	ShippingCost *Money `protobuf:"bytes,12,opt,name=shipping_cost,json=shippingCost,proto3" json:"shipping_cost,omitempty"`
	Total        *Money `protobuf:"bytes,13,opt,name=total,proto3" json:"total,omitempty"`
	// Metadata
	Metadata      map[string]string `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Notes         string            `protobuf:"bytes,15,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_comprehensive_test_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_comprehensive_test_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_comprehensive_test_proto_rawDescGZIP(), []int{19}
}

func (x *Order) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Order) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Order) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Order) GetCreatedAt() *Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetUpdatedAt() *Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Order) GetDeliveredAt() *Timestamp {
	if x != nil {
		return x.DeliveredAt
	}
	return nil
}

func (x *Order) GetItems() []*OrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Order) GetShippingAddress() *Address {
	if x != nil {
		return x.ShippingAddress
	}
	return nil
}

func (x *Order) GetBillingAddress() *Address {
	if x != nil {
		return x.BillingAddress
	}
	return nil
}

func (x *Order) GetSubtotal() *Money {
	if x != nil {
		return x.Subtotal
	}
	return nil
}

func (x *Order) GetTax() *Money {
	if x != nil {
		return x.Tax
	}
	return nil
}

func (x *Order) GetShippingCost() *Money {
	if x != nil {
		return x.ShippingCost
	}
	return nil
}

func (x *Order) GetTotal() *Money {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *Order) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Order) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

var File_comprehensive_test_proto protoreflect.FileDescriptor

const file_comprehensive_test_proto_rawDesc = "" +
	"\n" +
	"\x18comprehensive_test.proto\x12\x12test.comprehensive\x1a\fcommon.proto\"\x9d\x04\n" +
	"\x0eAllScalarTypes\x12\x1f\n" +
	"\vint32_field\x18\x01 \x01(\x05R\n" +
	"int32Field\x12\x1f\n" +
	"\vint64_field\x18\x02 \x01(\x03R\n" +
	"int64Field\x12!\n" +
	"\fuint32_field\x18\x03 \x01(\rR\vuint32Field\x12!\n" +
	"\fuint64_field\x18\x04 \x01(\x04R\vuint64Field\x12!\n" +
	"\fsint32_field\x18\x05 \x01(\x11R\vsint32Field\x12!\n" +
	"\fsint64_field\x18\x06 \x01(\x12R\vsint64Field\x12#\n" +
	"\rfixed32_field\x18\a \x01(\aR\ffixed32Field\x12#\n" +
	"\rfixed64_field\x18\b \x01(\x06R\ffixed64Field\x12%\n" +
	"\x0esfixed32_field\x18\t \x01(\x0fR\rsfixed32Field\x12%\n" +
	"\x0esfixed64_field\x18\n" +
	" \x01(\x10R\rsfixed64Field\x12\x1f\n" +
	"\vfloat_field\x18\v \x01(\x02R\n" +
	"floatField\x12!\n" +
	"\fdouble_field\x18\f \x01(\x01R\vdoubleField\x12\x1d\n" +
	"\n" +
	"bool_field\x18\r \x01(\bR\tboolField\x12!\n" +
	"\fstring_field\x18\x0e \x01(\tR\vstringField\x12\x1f\n" +
	"\vbytes_field\x18\x0f \x01(\fR\n" +
	"bytesField\"\xba\x04\n" +
	"\x10AllRepeatedTypes\x12\x1d\n" +
	"\n" +
	"int32_list\x18\x01 \x03(\x05R\tint32List\x12\x1d\n" +
	"\n" +
	"int64_list\x18\x02 \x03(\x03R\tint64List\x12\x1f\n" +
	"\vuint32_list\x18\x03 \x03(\rR\n" +
	"uint32List\x12\x1f\n" +
	"\vuint64_list\x18\x04 \x03(\x04R\n" +
	"uint64List\x12\x1f\n" +
	"\vsint32_list\x18\x05 \x03(\x11R\n" +
	"sint32List\x12\x1f\n" +
	"\vsint64_list\x18\x06 \x03(\x12R\n" +
	"sint64List\x12!\n" +
	"\ffixed32_list\x18\a \x03(\aR\vfixed32List\x12!\n" +
	"\ffixed64_list\x18\b \x03(\x06R\vfixed64List\x12#\n" +
	"\rsfixed32_list\x18\t \x03(\x0fR\fsfixed32List\x12#\n" +
	"\rsfixed64_list\x18\n" +
	" \x03(\x10R\fsfixed64List\x12\x1d\n" +
	"\n" +
	"float_list\x18\v \x03(\x02R\tfloatList\x12\x1f\n" +
	"\vdouble_list\x18\f \x03(\x01R\n" +
	"doubleList\x12\x1b\n" +
	"\tbool_list\x18\r \x03(\bR\bboolList\x12\x1f\n" +
	"\vstring_list\x18\x0e \x03(\tR\n" +
	"stringList\x12\x1d\n" +
	"\n" +
	"bytes_list\x18\x0f \x03(\fR\tbytesList\x127\n" +
	"\faddress_list\x18\x10 \x03(\v2\x14.test.common.AddressR\vaddressList\"\xff\x03\n" +
	"\fMapInt32Keys\x12[\n" +
	"\x0fint32_to_string\x18\x01 \x03(\v23.test.comprehensive.MapInt32Keys.Int32ToStringEntryR\rint32ToString\x12X\n" +
	"\x0eint32_to_int32\x18\x02 \x03(\v22.test.comprehensive.MapInt32Keys.Int32ToInt32EntryR\fint32ToInt32\x12^\n" +
	"\x10int32_to_message\x18\x03 \x03(\v24.test.comprehensive.MapInt32Keys.Int32ToMessageEntryR\x0eint32ToMessage\x1a@\n" +
	"\x12Int32ToStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a?\n" +
	"\x11Int32ToInt32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aU\n" +
	"\x13Int32ToMessageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.test.common.MoneyR\x05value:\x028\x01\"\xcc\x02\n" +
	"\fMapInt64Keys\x12[\n" +
	"\x0fint64_to_string\x18\x01 \x03(\v23.test.comprehensive.MapInt64Keys.Int64ToStringEntryR\rint64ToString\x12[\n" +
	"\x0fint64_to_double\x18\x02 \x03(\v23.test.comprehensive.MapInt64Keys.Int64ToDoubleEntryR\rint64ToDouble\x1a@\n" +
	"\x12Int64ToStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12Int64ToDoubleEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xcd\x02\n" +
	"\vMapUintKeys\x12]\n" +
	"\x10uint32_to_string\x18\x01 \x03(\v23.test.comprehensive.MapUintKeys.Uint32ToStringEntryR\x0euint32ToString\x12Z\n" +
	"\x0fuint64_to_bytes\x18\x02 \x03(\v22.test.comprehensive.MapUintKeys.Uint64ToBytesEntryR\ruint64ToBytes\x1aA\n" +
	"\x13Uint32ToStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12Uint64ToBytesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xc9\x02\n" +
	"\vMapSintKeys\x12Z\n" +
	"\x0fsint32_to_int32\x18\x01 \x03(\v22.test.comprehensive.MapSintKeys.Sint32ToInt32EntryR\rsint32ToInt32\x12Z\n" +
	"\x0fsint64_to_int64\x18\x02 \x03(\v22.test.comprehensive.MapSintKeys.Sint64ToInt64EntryR\rsint64ToInt64\x1a@\n" +
	"\x12Sint32ToInt32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x11R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a@\n" +
	"\x12Sint64ToInt64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x12R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xaa\x05\n" +
	"\fMapFixedKeys\x12a\n" +
	"\x11fixed32_to_string\x18\x01 \x03(\v25.test.comprehensive.MapFixedKeys.Fixed32ToStringEntryR\x0ffixed32ToString\x12a\n" +
	"\x11fixed64_to_string\x18\x02 \x03(\v25.test.comprehensive.MapFixedKeys.Fixed64ToStringEntryR\x0ffixed64ToString\x12a\n" +
	"\x11sfixed32_to_int32\x18\x03 \x03(\v25.test.comprehensive.MapFixedKeys.Sfixed32ToInt32EntryR\x0fsfixed32ToInt32\x12a\n" +
	"\x11sfixed64_to_int64\x18\x04 \x03(\v25.test.comprehensive.MapFixedKeys.Sfixed64ToInt64EntryR\x0fsfixed64ToInt64\x1aB\n" +
	"\x14Fixed32ToStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\aR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14Fixed64ToStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x06R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14Sfixed32ToInt32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x0fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aB\n" +
	"\x14Sfixed64ToInt64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x10R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xc1\x05\n" +
	"\x11MapBoolStringKeys\x12]\n" +
	"\x0ebool_to_string\x18\x01 \x03(\v27.test.comprehensive.MapBoolStringKeys.BoolToStringEntryR\fboolToString\x12c\n" +
	"\x10string_to_string\x18\x02 \x03(\v29.test.comprehensive.MapBoolStringKeys.StringToStringEntryR\x0estringToString\x12`\n" +
	"\x0fstring_to_int32\x18\x03 \x03(\v28.test.comprehensive.MapBoolStringKeys.StringToInt32EntryR\rstringToInt32\x12f\n" +
	"\x11string_to_message\x18\x04 \x03(\v2:.test.comprehensive.MapBoolStringKeys.StringToMessageEntryR\x0fstringToMessage\x1a?\n" +
	"\x11BoolToStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\bR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13StringToStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12StringToInt32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aX\n" +
	"\x14StringToMessageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.test.common.AddressR\x05value:\x028\x01\"4\n" +
	"\x06Level3\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\x05R\x05depth\"\x86\x01\n" +
	"\x06Level2\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x05child\x18\x02 \x01(\v2\x1a.test.comprehensive.Level3R\x05child\x126\n" +
	"\bchildren\x18\x03 \x03(\v2\x1a.test.comprehensive.Level3R\bchildren\"\xee\x01\n" +
	"\x06Level1\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x05child\x18\x02 \x01(\v2\x1a.test.comprehensive.Level2R\x05child\x12E\n" +
	"\tchild_map\x18\x03 \x03(\v2(.test.comprehensive.Level1.ChildMapEntryR\bchildMap\x1aW\n" +
	"\rChildMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.test.comprehensive.Level2R\x05value:\x028\x01\"\x98\x01\n" +
	"\x0fNestedStructure\x12\x1b\n" +
	"\troot_name\x18\x01 \x01(\tR\brootName\x120\n" +
	"\x05child\x18\x02 \x01(\v2\x1a.test.comprehensive.Level1R\x05child\x126\n" +
	"\bchildren\x18\x03 \x03(\v2\x1a.test.comprehensive.Level1R\bchildren\"\x93\x03\n" +
	"\x12OptionalFieldsTest\x12#\n" +
	"\rregular_int32\x18\x01 \x01(\x05R\fregularInt32\x12*\n" +
	"\x0eoptional_int32\x18\x02 \x01(\x05H\x00R\roptionalInt32\x88\x01\x01\x12,\n" +
	"\x0foptional_string\x18\x03 \x01(\tH\x01R\x0eoptionalString\x88\x01\x01\x12(\n" +
	"\roptional_bool\x18\x04 \x01(\bH\x02R\foptionalBool\x88\x01\x01\x12,\n" +
	"\x0foptional_double\x18\x05 \x01(\x01H\x03R\x0eoptionalDouble\x88\x01\x01\x12D\n" +
	"\x10optional_message\x18\x06 \x01(\v2\x14.test.common.AddressH\x04R\x0foptionalMessage\x88\x01\x01B\x11\n" +
	"\x0f_optional_int32B\x12\n" +
	"\x10_optional_stringB\x10\n" +
	"\x0e_optional_boolB\x12\n" +
	"\x10_optional_doubleB\x13\n" +
	"\x11_optional_message\"\xbd\x02\n" +
	"\x06Person\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03age\x18\x02 \x01(\x05R\x03age\x127\n" +
	"\fhome_address\x18\x03 \x01(\v2\x14.test.common.AddressR\vhomeAddress\x127\n" +
	"\fwork_address\x18\x04 \x01(\v2\x14.test.common.AddressR\vworkAddress\x12.\n" +
	"\baccounts\x18\x05 \x03(\v2\x12.test.common.MoneyR\baccounts\x125\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x16.test.common.TimestampR\tcreatedAt\x124\n" +
	"\blocation\x18\a \x01(\v2\x18.test.common.CoordinatesR\blocation\"\x97\x05\n" +
	"\tEdgeCases\x12\x1d\n" +
	"\n" +
	"zero_int32\x18\x01 \x01(\x05R\tzeroInt32\x12!\n" +
	"\fempty_string\x18\x02 \x01(\tR\vemptyString\x12\x1f\n" +
	"\vempty_bytes\x18\x03 \x01(\fR\n" +
	"emptyBytes\x12'\n" +
	"\x0fnegative_sint32\x18\x04 \x01(\x11R\x0enegativeSint32\x12'\n" +
	"\x0fnegative_sint64\x18\x05 \x01(\x12R\x0enegativeSint64\x12\x1b\n" +
	"\tmax_int32\x18\x06 \x01(\x05R\bmaxInt32\x12\x1b\n" +
	"\tmax_int64\x18\a \x01(\x03R\bmaxInt64\x12\x1d\n" +
	"\n" +
	"max_uint32\x18\b \x01(\rR\tmaxUint32\x12\x1d\n" +
	"\n" +
	"max_uint64\x18\t \x01(\x04R\tmaxUint64\x12\x1b\n" +
	"\tmin_int32\x18\n" +
	" \x01(\x05R\bminInt32\x12\x1b\n" +
	"\tmin_int64\x18\v \x01(\x03R\bminInt64\x12\x1d\n" +
	"\n" +
	"float_zero\x18\f \x01(\x02R\tfloatZero\x12%\n" +
	"\x0efloat_infinity\x18\r \x01(\x02R\rfloatInfinity\x12,\n" +
	"\x12float_neg_infinity\x18\x0e \x01(\x02R\x10floatNegInfinity\x12\x1d\n" +
	"\n" +
	"double_max\x18\x0f \x01(\x01R\tdoubleMax\x12\x1d\n" +
	"\n" +
	"double_min\x18\x10 \x01(\x01R\tdoubleMin\x12%\n" +
	"\x0eunicode_string\x18\x11 \x01(\tR\runicodeString\x12)\n" +
	"\x10multiline_string\x18\x12 \x01(\tR\x0fmultilineString\x12\x1f\n" +
	"\vlarge_bytes\x18\x13 \x01(\fR\n" +
	"largeBytes\"\"\n" +
	"\x06Empty_\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"\xa8\x01\n" +
	"\x12ReservedFieldNames\x12\x15\n" +
	"\x06class_\x18\x01 \x01(\tR\x05class\x12\x1b\n" +
	"\tfunction_\x18\x02 \x01(\tR\bfunction\x12\x11\n" +
	"\x04int_\x18\x03 \x01(\x05R\x03int\x12\x17\n" +
	"\astring_\x18\x04 \x01(\tR\x06string\x12\x13\n" +
	"\x05bool_\x18\x05 \x01(\bR\x04bool\x12\x1d\n" +
	"\n" +
	"exception_\x18\x06 \x01(\tR\texception\"\xc0\r\n" +
	"\n" +
	"StressTest\x12\x1b\n" +
	"\tfield_001\x18\x01 \x01(\tR\bfield001\x12\x1b\n" +
	"\tfield_002\x18\x02 \x01(\tR\bfield002\x12\x1b\n" +
	"\tfield_003\x18\x03 \x01(\tR\bfield003\x12\x1b\n" +
	"\tfield_004\x18\x04 \x01(\tR\bfield004\x12\x1b\n" +
	"\tfield_005\x18\x05 \x01(\tR\bfield005\x12\x1b\n" +
	"\tfield_006\x18\x06 \x01(\tR\bfield006\x12\x1b\n" +
	"\tfield_007\x18\a \x01(\tR\bfield007\x12\x1b\n" +
	"\tfield_008\x18\b \x01(\tR\bfield008\x12\x1b\n" +
	"\tfield_009\x18\t \x01(\tR\bfield009\x12\x1b\n" +
	"\tfield_010\x18\n" +
	" \x01(\tR\bfield010\x12\x1b\n" +
	"\tfield_011\x18\v \x01(\tR\bfield011\x12\x1b\n" +
	"\tfield_012\x18\f \x01(\tR\bfield012\x12\x1b\n" +
	"\tfield_013\x18\r \x01(\tR\bfield013\x12\x1b\n" +
	"\tfield_014\x18\x0e \x01(\tR\bfield014\x12\x1b\n" +
	"\tfield_015\x18\x0f \x01(\tR\bfield015\x12\x1b\n" +
	"\tfield_016\x18\x10 \x01(\tR\bfield016\x12\x1b\n" +
	"\tfield_017\x18\x11 \x01(\tR\bfield017\x12\x1b\n" +
	"\tfield_018\x18\x12 \x01(\tR\bfield018\x12\x1b\n" +
	"\tfield_019\x18\x13 \x01(\tR\bfield019\x12\x1b\n" +
	"\tfield_020\x18\x14 \x01(\tR\bfield020\x12\x1b\n" +
	"\tfield_021\x18\x15 \x01(\tR\bfield021\x12\x1b\n" +
	"\tfield_022\x18\x16 \x01(\tR\bfield022\x12\x1b\n" +
	"\tfield_023\x18\x17 \x01(\tR\bfield023\x12\x1b\n" +
	"\tfield_024\x18\x18 \x01(\tR\bfield024\x12\x1b\n" +
	"\tfield_025\x18\x19 \x01(\tR\bfield025\x12\x1b\n" +
	"\tfield_026\x18\x1a \x01(\tR\bfield026\x12\x1b\n" +
	"\tfield_027\x18\x1b \x01(\tR\bfield027\x12\x1b\n" +
	"\tfield_028\x18\x1c \x01(\tR\bfield028\x12\x1b\n" +
	"\tfield_029\x18\x1d \x01(\tR\bfield029\x12\x1b\n" +
	"\tfield_030\x18\x1e \x01(\tR\bfield030\x12\x1b\n" +
	"\tfield_031\x18\x1f \x01(\tR\bfield031\x12\x1b\n" +
	"\tfield_032\x18  \x01(\tR\bfield032\x12\x1b\n" +
	"\tfield_033\x18! \x01(\tR\bfield033\x12\x1b\n" +
	"\tfield_034\x18\" \x01(\tR\bfield034\x12\x1b\n" +
	"\tfield_035\x18# \x01(\tR\bfield035\x12\x1b\n" +
	"\tfield_036\x18$ \x01(\tR\bfield036\x12\x1b\n" +
	"\tfield_037\x18% \x01(\tR\bfield037\x12\x1b\n" +
	"\tfield_038\x18& \x01(\tR\bfield038\x12\x1b\n" +
	"\tfield_039\x18' \x01(\tR\bfield039\x12\x1b\n" +
	"\tfield_040\x18( \x01(\tR\bfield040\x12\x1b\n" +
	"\tfield_041\x18) \x01(\tR\bfield041\x12\x1b\n" +
	"\tfield_042\x18* \x01(\tR\bfield042\x12\x1b\n" +
	"\tfield_043\x18+ \x01(\tR\bfield043\x12\x1b\n" +
	"\tfield_044\x18, \x01(\tR\bfield044\x12\x1b\n" +
	"\tfield_045\x18- \x01(\tR\bfield045\x12\x1b\n" +
	"\tfield_046\x18. \x01(\tR\bfield046\x12\x1b\n" +
	"\tfield_047\x18/ \x01(\tR\bfield047\x12\x1b\n" +
	"\tfield_048\x180 \x01(\tR\bfield048\x12\x1b\n" +
	"\tfield_049\x181 \x01(\tR\bfield049\x12\x1b\n" +
	"\tfield_050\x182 \x01(\tR\bfield050\x12\x19\n" +
	"\bint_list\x183 \x03(\x05R\aintList\x12H\n" +
	"\bmetadata\x184 \x03(\v2,.test.comprehensive.StressTest.MetadataEntryR\bmetadata\x12.\n" +
	"\aaddress\x185 \x01(\v2\x14.test.common.AddressR\aaddress\x126\n" +
	"\ftransactions\x186 \x03(\v2\x12.test.common.MoneyR\ftransactions\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdf\x02\n" +
	"\tOrderItem\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12!\n" +
	"\fproduct_name\x18\x02 \x01(\tR\vproductName\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x121\n" +
	"\n" +
	"unit_price\x18\x04 \x01(\v2\x12.test.common.MoneyR\tunitPrice\x123\n" +
	"\vtotal_price\x18\x05 \x01(\v2\x12.test.common.MoneyR\n" +
	"totalPrice\x12M\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2-.test.comprehensive.OrderItem.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcd\x06\n" +
	"\x05Order\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x05R\x06status\x125\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x16.test.common.TimestampR\tcreatedAt\x12:\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x16.test.common.TimestampH\x00R\tupdatedAt\x88\x01\x01\x12>\n" +
	"\fdelivered_at\x18\x06 \x01(\v2\x16.test.common.TimestampH\x01R\vdeliveredAt\x88\x01\x01\x123\n" +
	"\x05items\x18\a \x03(\v2\x1d.test.comprehensive.OrderItemR\x05items\x12?\n" +
	"\x10shipping_address\x18\b \x01(\v2\x14.test.common.AddressR\x0fshippingAddress\x12B\n" +
	"\x0fbilling_address\x18\t \x01(\v2\x14.test.common.AddressH\x02R\x0ebillingAddress\x88\x01\x01\x12.\n" +
	"\bsubtotal\x18\n" +
	" \x01(\v2\x12.test.common.MoneyR\bsubtotal\x12$\n" +
	"\x03tax\x18\v \x01(\v2\x12.test.common.MoneyR\x03tax\x127\n" +
	"\rshipping_cost\x18\f \x01(\v2\x12.test.common.MoneyR\fshippingCost\x12(\n" +
	"\x05total\x18\r \x01(\v2\x12.test.common.MoneyR\x05total\x12C\n" +
	"\bmetadata\x18\x0e \x03(\v2'.test.comprehensive.Order.MetadataEntryR\bmetadata\x12\x14\n" +
	"\x05notes\x18\x0f \x01(\tR\x05notes\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\r\n" +
	"\v_updated_atB\x0f\n" +
	"\r_delivered_atB\x12\n" +
	"\x10_billing_addressB\x17Z\n" +
	"proteus/pb\xca\x02\bTests\\PBb\x06proto3"

var (
	file_comprehensive_test_proto_rawDescOnce sync.Once
	file_comprehensive_test_proto_rawDescData []byte
)

func file_comprehensive_test_proto_rawDescGZIP() []byte {
	file_comprehensive_test_proto_rawDescOnce.Do(func() {
		file_comprehensive_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comprehensive_test_proto_rawDesc), len(file_comprehensive_test_proto_rawDesc)))
	})
	return file_comprehensive_test_proto_rawDescData
}

var file_comprehensive_test_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_comprehensive_test_proto_goTypes = []any{
	(*AllScalarTypes)(nil),     // 0: test.comprehensive.AllScalarTypes
	(*AllRepeatedTypes)(nil),   // 1: test.comprehensive.AllRepeatedTypes
	(*MapInt32Keys)(nil),       // 2: test.comprehensive.MapInt32Keys
	(*MapInt64Keys)(nil),       // 3: test.comprehensive.MapInt64Keys
	(*MapUintKeys)(nil),        // 4: test.comprehensive.MapUintKeys
	(*MapSintKeys)(nil),        // 5: test.comprehensive.MapSintKeys
	(*MapFixedKeys)(nil),       // 6: test.comprehensive.MapFixedKeys
	(*MapBoolStringKeys)(nil),  // 7: test.comprehensive.MapBoolStringKeys
	(*Level3)(nil),             // 8: test.comprehensive.Level3
	(*Level2)(nil),             // 9: test.comprehensive.Level2
	(*Level1)(nil),             // 10: test.comprehensive.Level1
	(*NestedStructure)(nil),    // 11: test.comprehensive.NestedStructure
	(*OptionalFieldsTest)(nil), // 12: test.comprehensive.OptionalFieldsTest
	(*Person)(nil),             // 13: test.comprehensive.Person
	(*EdgeCases)(nil),          // 14: test.comprehensive.EdgeCases
	(*Empty_)(nil),             // 15: test.comprehensive.Empty_
	(*ReservedFieldNames)(nil), // 16: test.comprehensive.ReservedFieldNames
	(*StressTest)(nil),         // 17: test.comprehensive.StressTest
	(*OrderItem)(nil),          // 18: test.comprehensive.OrderItem
	(*Order)(nil),              // 19: test.comprehensive.Order
	nil,                        // 20: test.comprehensive.MapInt32Keys.Int32ToStringEntry
	nil,                        // 21: test.comprehensive.MapInt32Keys.Int32ToInt32Entry
	nil,                        // 22: test.comprehensive.MapInt32Keys.Int32ToMessageEntry
	nil,                        // 23: test.comprehensive.MapInt64Keys.Int64ToStringEntry
	nil,                        // 24: test.comprehensive.MapInt64Keys.Int64ToDoubleEntry
	nil,                        // 25: test.comprehensive.MapUintKeys.Uint32ToStringEntry
	nil,                        // 26: test.comprehensive.MapUintKeys.Uint64ToBytesEntry
	nil,                        // 27: test.comprehensive.MapSintKeys.Sint32ToInt32Entry
	nil,                        // 28: test.comprehensive.MapSintKeys.Sint64ToInt64Entry
	nil,                        // 29: test.comprehensive.MapFixedKeys.Fixed32ToStringEntry
	nil,                        // 30: test.comprehensive.MapFixedKeys.Fixed64ToStringEntry
	nil,                        // 31: test.comprehensive.MapFixedKeys.Sfixed32ToInt32Entry
	nil,                        // 32: test.comprehensive.MapFixedKeys.Sfixed64ToInt64Entry
	nil,                        // 33: test.comprehensive.MapBoolStringKeys.BoolToStringEntry
	nil,                        // 34: test.comprehensive.MapBoolStringKeys.StringToStringEntry
	nil,                        // 35: test.comprehensive.MapBoolStringKeys.StringToInt32Entry
	nil,                        // 36: test.comprehensive.MapBoolStringKeys.StringToMessageEntry
	nil,                        // 37: test.comprehensive.Level1.ChildMapEntry
	nil,                        // 38: test.comprehensive.StressTest.MetadataEntry
	nil,                        // 39: test.comprehensive.OrderItem.AttributesEntry
	nil,                        // 40: test.comprehensive.Order.MetadataEntry
	(*Address)(nil),            // 41: test.common.Address
	(*Money)(nil),              // 42: test.common.Money
	(*Timestamp)(nil),          // 43: test.common.Timestamp
	(*Coordinates)(nil),        // 44: test.common.Coordinates
}
var file_comprehensive_test_proto_depIdxs = []int32{
	41, // 0: test.comprehensive.AllRepeatedTypes.address_list:type_name -> test.common.Address
	20, // 1: test.comprehensive.MapInt32Keys.int32_to_string:type_name -> test.comprehensive.MapInt32Keys.Int32ToStringEntry
	21, // 2: test.comprehensive.MapInt32Keys.int32_to_int32:type_name -> test.comprehensive.MapInt32Keys.Int32ToInt32Entry
	22, // 3: test.comprehensive.MapInt32Keys.int32_to_message:type_name -> test.comprehensive.MapInt32Keys.Int32ToMessageEntry
	23, // 4: test.comprehensive.MapInt64Keys.int64_to_string:type_name -> test.comprehensive.MapInt64Keys.Int64ToStringEntry
	24, // 5: test.comprehensive.MapInt64Keys.int64_to_double:type_name -> test.comprehensive.MapInt64Keys.Int64ToDoubleEntry
	25, // 6: test.comprehensive.MapUintKeys.uint32_to_string:type_name -> test.comprehensive.MapUintKeys.Uint32ToStringEntry
	26, // 7: test.comprehensive.MapUintKeys.uint64_to_bytes:type_name -> test.comprehensive.MapUintKeys.Uint64ToBytesEntry
	27, // 8: test.comprehensive.MapSintKeys.sint32_to_int32:type_name -> test.comprehensive.MapSintKeys.Sint32ToInt32Entry
	28, // 9: test.comprehensive.MapSintKeys.sint64_to_int64:type_name -> test.comprehensive.MapSintKeys.Sint64ToInt64Entry
	29, // 10: test.comprehensive.MapFixedKeys.fixed32_to_string:type_name -> test.comprehensive.MapFixedKeys.Fixed32ToStringEntry
	30, // 11: test.comprehensive.MapFixedKeys.fixed64_to_string:type_name -> test.comprehensive.MapFixedKeys.Fixed64ToStringEntry
	31, // 12: test.comprehensive.MapFixedKeys.sfixed32_to_int32:type_name -> test.comprehensive.MapFixedKeys.Sfixed32ToInt32Entry
	32, // 13: test.comprehensive.MapFixedKeys.sfixed64_to_int64:type_name -> test.comprehensive.MapFixedKeys.Sfixed64ToInt64Entry
	33, // 14: test.comprehensive.MapBoolStringKeys.bool_to_string:type_name -> test.comprehensive.MapBoolStringKeys.BoolToStringEntry
	34, // 15: test.comprehensive.MapBoolStringKeys.string_to_string:type_name -> test.comprehensive.MapBoolStringKeys.StringToStringEntry
	35, // 16: test.comprehensive.MapBoolStringKeys.string_to_int32:type_name -> test.comprehensive.MapBoolStringKeys.StringToInt32Entry
	36, // 17: test.comprehensive.MapBoolStringKeys.string_to_message:type_name -> test.comprehensive.MapBoolStringKeys.StringToMessageEntry
	8,  // 18: test.comprehensive.Level2.child:type_name -> test.comprehensive.Level3
	8,  // 19: test.comprehensive.Level2.children:type_name -> test.comprehensive.Level3
	9,  // 20: test.comprehensive.Level1.child:type_name -> test.comprehensive.Level2
	37, // 21: test.comprehensive.Level1.child_map:type_name -> test.comprehensive.Level1.ChildMapEntry
	10, // 22: test.comprehensive.NestedStructure.child:type_name -> test.comprehensive.Level1
	10, // 23: test.comprehensive.NestedStructure.children:type_name -> test.comprehensive.Level1
	41, // 24: test.comprehensive.OptionalFieldsTest.optional_message:type_name -> test.common.Address
	41, // 25: test.comprehensive.Person.home_address:type_name -> test.common.Address
	41, // 26: test.comprehensive.Person.work_address:type_name -> test.common.Address
	42, // 27: test.comprehensive.Person.accounts:type_name -> test.common.Money
	43, // 28: test.comprehensive.Person.created_at:type_name -> test.common.Timestamp
	44, // 29: test.comprehensive.Person.location:type_name -> test.common.Coordinates
	38, // 30: test.comprehensive.StressTest.metadata:type_name -> test.comprehensive.StressTest.MetadataEntry
	41, // 31: test.comprehensive.StressTest.address:type_name -> test.common.Address
	42, // 32: test.comprehensive.StressTest.transactions:type_name -> test.common.Money
	42, // 33: test.comprehensive.OrderItem.unit_price:type_name -> test.common.Money
	42, // 34: test.comprehensive.OrderItem.total_price:type_name -> test.common.Money
	39, // 35: test.comprehensive.OrderItem.attributes:type_name -> test.comprehensive.OrderItem.AttributesEntry
	43, // 36: test.comprehensive.Order.created_at:type_name -> test.common.Timestamp
	43, // 37: test.comprehensive.Order.updated_at:type_name -> test.common.Timestamp
	43, // 38: test.comprehensive.Order.delivered_at:type_name -> test.common.Timestamp
	18, // 39: test.comprehensive.Order.items:type_name -> test.comprehensive.OrderItem
	41, // 40: test.comprehensive.Order.shipping_address:type_name -> test.common.Address
	41, // 41: test.comprehensive.Order.billing_address:type_name -> test.common.Address
	42, // 42: test.comprehensive.Order.subtotal:type_name -> test.common.Money
	42, // 43: test.comprehensive.Order.tax:type_name -> test.common.Money
	42, // 44: test.comprehensive.Order.shipping_cost:type_name -> test.common.Money
	42, // 45: test.comprehensive.Order.total:type_name -> test.common.Money
	40, // 46: test.comprehensive.Order.metadata:type_name -> test.comprehensive.Order.MetadataEntry
	42, // 47: test.comprehensive.MapInt32Keys.Int32ToMessageEntry.value:type_name -> test.common.Money
	41, // 48: test.comprehensive.MapBoolStringKeys.StringToMessageEntry.value:type_name -> test.common.Address
	9,  // 49: test.comprehensive.Level1.ChildMapEntry.value:type_name -> test.comprehensive.Level2
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_comprehensive_test_proto_init() }
func file_comprehensive_test_proto_init() {
	if File_comprehensive_test_proto != nil {
		return
	}
	file_common_proto_init()
	file_comprehensive_test_proto_msgTypes[12].OneofWrappers = []any{}
	file_comprehensive_test_proto_msgTypes[19].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comprehensive_test_proto_rawDesc), len(file_comprehensive_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_comprehensive_test_proto_goTypes,
		DependencyIndexes: file_comprehensive_test_proto_depIdxs,
		MessageInfos:      file_comprehensive_test_proto_msgTypes,
	}.Build()
	File_comprehensive_test_proto = out.File
	file_comprehensive_test_proto_goTypes = nil
	file_comprehensive_test_proto_depIdxs = nil
}

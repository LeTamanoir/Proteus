// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: proto/test.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataTypes struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StrTest         string                 `protobuf:"bytes,1,opt,name=str_test,json=strTest,proto3" json:"str_test,omitempty"`
	IntTest         int32                  `protobuf:"varint,2,opt,name=int_test,json=intTest,proto3" json:"int_test,omitempty"`
	BoolTest        bool                   `protobuf:"varint,3,opt,name=bool_test,json=boolTest,proto3" json:"bool_test,omitempty"`
	FloatTest       float32                `protobuf:"fixed32,4,opt,name=float_test,json=floatTest,proto3" json:"float_test,omitempty"`
	DoubleTest      float64                `protobuf:"fixed64,5,opt,name=double_test,json=doubleTest,proto3" json:"double_test,omitempty"`
	BytesTest       []byte                 `protobuf:"bytes,6,opt,name=bytes_test,json=bytesTest,proto3" json:"bytes_test,omitempty"`
	MapTest         map[string]string      `protobuf:"bytes,7,rep,name=map_test,json=mapTest,proto3" json:"map_test,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IntTestList     []int32                `protobuf:"varint,8,rep,packed,name=int_test_list,json=intTestList,proto3" json:"int_test_list,omitempty"`
	Uint64Test      uint64                 `protobuf:"varint,9,opt,name=uint64_test,json=uint64Test,proto3" json:"uint64_test,omitempty"`
	NestedEmptyTest *Empty                 `protobuf:"bytes,10,opt,name=nested_empty_test,json=nestedEmptyTest,proto3" json:"nested_empty_test,omitempty"`
	MapEmptyTest    map[int32]*Empty       `protobuf:"bytes,11,rep,name=map_empty_test,json=mapEmptyTest,proto3" json:"map_empty_test,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DataTypes) Reset() {
	*x = DataTypes{}
	mi := &file_proto_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTypes) ProtoMessage() {}

func (x *DataTypes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTypes.ProtoReflect.Descriptor instead.
func (*DataTypes) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{0}
}

func (x *DataTypes) GetStrTest() string {
	if x != nil {
		return x.StrTest
	}
	return ""
}

func (x *DataTypes) GetIntTest() int32 {
	if x != nil {
		return x.IntTest
	}
	return 0
}

func (x *DataTypes) GetBoolTest() bool {
	if x != nil {
		return x.BoolTest
	}
	return false
}

func (x *DataTypes) GetFloatTest() float32 {
	if x != nil {
		return x.FloatTest
	}
	return 0
}

func (x *DataTypes) GetDoubleTest() float64 {
	if x != nil {
		return x.DoubleTest
	}
	return 0
}

func (x *DataTypes) GetBytesTest() []byte {
	if x != nil {
		return x.BytesTest
	}
	return nil
}

func (x *DataTypes) GetMapTest() map[string]string {
	if x != nil {
		return x.MapTest
	}
	return nil
}

func (x *DataTypes) GetIntTestList() []int32 {
	if x != nil {
		return x.IntTestList
	}
	return nil
}

func (x *DataTypes) GetUint64Test() uint64 {
	if x != nil {
		return x.Uint64Test
	}
	return 0
}

func (x *DataTypes) GetNestedEmptyTest() *Empty {
	if x != nil {
		return x.NestedEmptyTest
	}
	return nil
}

func (x *DataTypes) GetMapEmptyTest() map[int32]*Empty {
	if x != nil {
		return x.MapEmptyTest
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{1}
}

type DelayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ms            int32                  `protobuf:"varint,1,opt,name=ms,proto3" json:"ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelayRequest) Reset() {
	*x = DelayRequest{}
	mi := &file_proto_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayRequest) ProtoMessage() {}

func (x *DelayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayRequest.ProtoReflect.Descriptor instead.
func (*DelayRequest) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{2}
}

func (x *DelayRequest) GetMs() int32 {
	if x != nil {
		return x.Ms
	}
	return 0
}

type FailurePatternRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FailTimes     int32                  `protobuf:"varint,1,opt,name=fail_times,json=failTimes,proto3" json:"fail_times,omitempty"`
	ErrorCode     int32                  `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailurePatternRequest) Reset() {
	*x = FailurePatternRequest{}
	mi := &file_proto_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailurePatternRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailurePatternRequest) ProtoMessage() {}

func (x *FailurePatternRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailurePatternRequest.ProtoReflect.Descriptor instead.
func (*FailurePatternRequest) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{3}
}

func (x *FailurePatternRequest) GetFailTimes() int32 {
	if x != nil {
		return x.FailTimes
	}
	return 0
}

func (x *FailurePatternRequest) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *FailurePatternRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_proto_test_proto protoreflect.FileDescriptor

const file_proto_test_proto_rawDesc = "" +
	"\n" +
	"\x10proto/test.proto\x12\x04test\"\xc7\x04\n" +
	"\tDataTypes\x12\x19\n" +
	"\bstr_test\x18\x01 \x01(\tR\astrTest\x12\x19\n" +
	"\bint_test\x18\x02 \x01(\x05R\aintTest\x12\x1b\n" +
	"\tbool_test\x18\x03 \x01(\bR\bboolTest\x12\x1d\n" +
	"\n" +
	"float_test\x18\x04 \x01(\x02R\tfloatTest\x12\x1f\n" +
	"\vdouble_test\x18\x05 \x01(\x01R\n" +
	"doubleTest\x12\x1d\n" +
	"\n" +
	"bytes_test\x18\x06 \x01(\fR\tbytesTest\x127\n" +
	"\bmap_test\x18\a \x03(\v2\x1c.test.DataTypes.MapTestEntryR\amapTest\x12\"\n" +
	"\rint_test_list\x18\b \x03(\x05R\vintTestList\x12\x1f\n" +
	"\vuint64_test\x18\t \x01(\x04R\n" +
	"uint64Test\x127\n" +
	"\x11nested_empty_test\x18\n" +
	" \x01(\v2\v.test.EmptyR\x0fnestedEmptyTest\x12G\n" +
	"\x0emap_empty_test\x18\v \x03(\v2!.test.DataTypes.MapEmptyTestEntryR\fmapEmptyTest\x1a:\n" +
	"\fMapTestEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aL\n" +
	"\x11MapEmptyTestEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12!\n" +
	"\x05value\x18\x02 \x01(\v2\v.test.EmptyR\x05value:\x028\x01\"\a\n" +
	"\x05Empty\"\x1e\n" +
	"\fDelayRequest\x12\x0e\n" +
	"\x02ms\x18\x01 \x01(\x05R\x02ms\"g\n" +
	"\x15FailurePatternRequest\x12\x1d\n" +
	"\n" +
	"fail_times\x18\x01 \x01(\x05R\tfailTimes\x12\x1d\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x05R\terrorCode\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key2\xfd\x01\n" +
	"\vTestService\x120\n" +
	"\fGetDataTypes\x12\x0f.test.DataTypes\x1a\x0f.test.DataTypes\x12$\n" +
	"\bGetEmpty\x12\v.test.Empty\x1a\v.test.Empty\x122\n" +
	"\x0fGetDelayRequest\x12\x12.test.DelayRequest\x1a\v.test.Empty\x12=\n" +
	"\x11GetFailurePattern\x12\x1b.test.FailurePatternRequest\x1a\v.test.Empty\x12#\n" +
	"\aGetMeta\x12\v.test.Empty\x1a\v.test.EmptyBJZ,github.com/letamanoir/iris/test-server/proto\xca\x02\vTests\\Proto\xe2\x02\vTests\\Protob\x06proto3"

var (
	file_proto_test_proto_rawDescOnce sync.Once
	file_proto_test_proto_rawDescData []byte
)

func file_proto_test_proto_rawDescGZIP() []byte {
	file_proto_test_proto_rawDescOnce.Do(func() {
		file_proto_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_test_proto_rawDesc), len(file_proto_test_proto_rawDesc)))
	})
	return file_proto_test_proto_rawDescData
}

var file_proto_test_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_test_proto_goTypes = []any{
	(*DataTypes)(nil),             // 0: test.DataTypes
	(*Empty)(nil),                 // 1: test.Empty
	(*DelayRequest)(nil),          // 2: test.DelayRequest
	(*FailurePatternRequest)(nil), // 3: test.FailurePatternRequest
	nil,                           // 4: test.DataTypes.MapTestEntry
	nil,                           // 5: test.DataTypes.MapEmptyTestEntry
}
var file_proto_test_proto_depIdxs = []int32{
	4, // 0: test.DataTypes.map_test:type_name -> test.DataTypes.MapTestEntry
	1, // 1: test.DataTypes.nested_empty_test:type_name -> test.Empty
	5, // 2: test.DataTypes.map_empty_test:type_name -> test.DataTypes.MapEmptyTestEntry
	1, // 3: test.DataTypes.MapEmptyTestEntry.value:type_name -> test.Empty
	0, // 4: test.TestService.GetDataTypes:input_type -> test.DataTypes
	1, // 5: test.TestService.GetEmpty:input_type -> test.Empty
	2, // 6: test.TestService.GetDelayRequest:input_type -> test.DelayRequest
	3, // 7: test.TestService.GetFailurePattern:input_type -> test.FailurePatternRequest
	1, // 8: test.TestService.GetMeta:input_type -> test.Empty
	0, // 9: test.TestService.GetDataTypes:output_type -> test.DataTypes
	1, // 10: test.TestService.GetEmpty:output_type -> test.Empty
	1, // 11: test.TestService.GetDelayRequest:output_type -> test.Empty
	1, // 12: test.TestService.GetFailurePattern:output_type -> test.Empty
	1, // 13: test.TestService.GetMeta:output_type -> test.Empty
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_test_proto_init() }
func file_proto_test_proto_init() {
	if File_proto_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_test_proto_rawDesc), len(file_proto_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_test_proto_goTypes,
		DependencyIndexes: file_proto_test_proto_depIdxs,
		MessageInfos:      file_proto_test_proto_msgTypes,
	}.Build()
	File_proto_test_proto = out.File
	file_proto_test_proto_goTypes = nil
	file_proto_test_proto_depIdxs = nil
}
